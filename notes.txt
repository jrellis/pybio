1. Just match the major blast tools
    support scanning against a file
        top n matches, scores above? or significance?
        return list of alignment objects
        support gzipped and text
        n-n, p-p (others later...)

2. improve the alignment output
3. score filter
4. refactor C code - pare down to necessary code

5. Write chapter
6. Write tests
7. Test on mac



TODO:
Multiple alignment - Clustal Omega, Muscle
Pairwise alignment against a file.
Installed libraries
Reverse transcription
Clustal file format
Refactor from_fasta, from_fastq - have the files return by matching an identifier
improve match output

Work on SSW usefulness

1. Improve alignment output
    confusion about target/query *
    allow printing a part of the match
    divide the lines, blast style
    closer to blast style
    best for whole genome?
2. Check use cases for ssw/blast, and extend to these; compare to blast results.
    seq/seq
    seq/library
    organism/library
3. Get as many of these use cases into ssw. Compare results to pybio.
4. Also compare results, output, and speed with BLAST
5. score filter

Multiple Alignment (Clustal Omega, Muscle?)

BLAST (blastn, blastp,...)

SSW to processor parallel

Refactor of ssw code
    Processor level parallelism at C level

Query:  Query Name
Target: Target Name

Score: 56   Gaps: 10/10879  Whatever:

Query  1345  CATGGG-ACT  5467
             ||||** |||
Target 4567  CATGAACACT  4698

a[0:-1] reads the same as the last three lines


